# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Virtual Environment
venv/
env/
ENV/

# IDE
.idea/
.vscode/
*.swp
*.swo

# Dataset files
data/DataCoSupplyChainDataset.csv
data/*.zip
data/clickstream_chunks/*
!data/clickstream_chunks/.gitkeep

# Vector store files
*.faiss
*.pkl
*.bin

# Logs
*.log

# Local development
.env
.env.local
!.env.example

# Jupyter Notebook
.ipynb_checkpoints
*.ipynb

# macOS
.DS_Store

# Assets (except documentation images)
assets/*
!assets/.gitkeep 

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install different versions of packages depending
#   on the platform. These differences may mean that since Pipfile.lock is platform-specific,
#   it is not possible to share it across different platforms.
# Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   The poetry.lock file ensures that everyone working on the project has the same versions of

#   the dependencies.
#   For more information, see https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file
# poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
# pdm.lock

# PEP 582; used by e.g. pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyderworkspace

# Rope project settings
.ropeproject

# Pyright type checker
.pyright

# Pyre type checker
.pyre/

# mypy
.mypy_cache/

# Static analysis type checker
.dmypy.json
dmypy.json

# Microsoft Visual Studio Code
.vscode/
.history/

# Sublime Text
*.sublime-project
*.sublime-workspace

# VIM
*.swp
*.swo

# ruff
.ruff_cache/ 

# Data files
# We are using Git LFS for large files inside data/, so we don't ignore the whole folder.
# We still ignore generated database files.
chroma_data/
.chromadb/
data/vector_store/
data/precomputed/ 